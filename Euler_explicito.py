# -*- coding: utf-8 -*-
"""Met_comp_B.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FfaCMU_rJ4K-SNPM2ovYoAetjFPTQjDo
"""

#Método de Euler explícito:

import matplotlib.pyplot as plt
from math import *
import numpy as np

x_inicial = float(input('Insira o valor inicial de x:'))
t_final   = float(input('Insira o valor inicial de t:'))

decaimento = 2.

dt = [0.01, 0.1, 0.5, 1., 2.]

t = 0

x_ind = []
t_ind = []

x_plot = []
t_plot = []

x = x_inicial

t_analitico = np.arange(0,t_final,0.01)
x_analitico = x * np.exp(-t_analitico/decaimento)

for i in dt:
  while t <= t_final:
    x = x - (x/decaimento)*i
    x_ind.append(x)
    t_ind.append(t)
    t = t + i

  t = 0
  x = x_inicial
  t_plot.append(t_ind)
  x_plot.append(x_ind)
  t_ind = []
  x_ind = []

for j in (range(len(dt))):
  plt.plot(t_plot[j], x_plot[j], label = str(dt[j]))

plt.plot(t_analitico, x_analitico, label="Solução analítica", c="black")
    
plt.xlabel("Tempo")
plt.ylabel("Numero de atomos")
plt.legend()
plt.show()